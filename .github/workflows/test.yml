# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python test

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]
    types: [closed]

jobs:
  test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest -v
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Test with pytest
      run: |
        pytest -vv
  sonarqube:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/develop' }}
    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarQube Scan
      uses: SonarSource/sonarcloud-github-action@master
      with:
        args: >
          -Dsonar.projectKey=GAparsimony 
          -Dsonar.sources=.
          -Dsonar.organization=misantam
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  readthedocs:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' && github.head_ref == 'develop' && github.base_ref == 'main' }}
    steps:
    - name: webook readthedocs.io
      run: |
            curl -X POST -d "branches=main" -d "token=${{ secrets.READTHEDOC_TOKEN }}" ${{ secrets.READTHEDOC_URL }}
  Create_the_tag_and_the_release:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' && github.head_ref == 'develop' && github.base_ref == 'main' }}
    steps:
    - uses: actions/checkout@v2
    - name: Set env
      run: echo "VERSION=$(head -n 1 ./GAparsimony/__init__.py | tr "=" "\n" |sed -n '2p')" >> $GITHUB_ENV
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ env.VERSION }}
        release_name: Release ${{ env.VERSION }}
        body: |
          Changes in this Release ${{ env.VERSION }}
        draft: false
        prerelease: false
  PYPI_upload:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' && github.head_ref == 'develop' && github.base_ref == 'main' }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        pip install twine
        pip install build
        ls
        python -m build
    - name: Upload to pypi
      run: |
        python3 -m twine upload -u __token__ -p ${{ secrets.PYPI_TOKEN }} --repository-url https://upload.pypi.org/legacy/ dist/*